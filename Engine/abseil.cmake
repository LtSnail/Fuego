# Abseil

# Only include components we actually use
SET(ABSEIL_BASE
    base
    container
    hash
    log
    memory
    status
    strings
    synchronization
    time
    types
    utility
)

# Flags configuration:
SET(BUILD_SHARED_LIBS OFF)
SET(CMAKE_ITERATOR_DEBUG_LEVEL 0)
SET(ABSL_RUN_TESTS OFF)
SET(ABSL_MSVC_STATIC_RUNTIME OFF)
SET(ABSL_BUILD_TEST_HELPERS OFF)
SET(ABSL_USE_EXTERNAL_GOOGLETEST OFF)
SET(ABSL_USE_GOOGLETEST_HEAD OFF)
SET(ABSL_ENABLE_INSTALL OFF) # Disable installation
SET(ABSL_PROPAGATE_CXX_STD ON) # Use our C++ standard
SET(ABSL_ENABLE_INSTALL OFF) # Disable installation
SET(ABSL_USE_GOOGLETEST OFF) # Disable tests
SET(ABSL_USE_ABSL_TESTING OFF) # Disable testing

# Paths:
SET(ABSL_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/External/abseil)

SET(CMAKE_INSTALL_PREFIX ${ABSL_INST})

IF(FU_CONF_DEBUG)
  SET(CMAKE_MSVC_RUNTIME_LIBRARY ${FU_MSVC_RUNTIME_DEBUG})
ELSEIF(FU_CONF_RELEASE)
  SET(CMAKE_MSVC_RUNTIME_LIBRARY ${FU_MSVC_RUNTIME_RELEASE})
ENDIF()

ADD_SUBDIRECTORY(${ABSL_ROOT})

FOREACH(path ${ABSEIL_BASE})
  GET_DIRECTORY_PROPERTY(ABSL_TARGETS DIRECTORY ${ABSL_ROOT}/absl/${path} BUILDSYSTEM_TARGETS)
  FOREACH(target ${ABSL_TARGETS})
    SET_TARGET_PROPERTIES(${target} PROPERTIES FOLDER "External/Abseil")
  ENDFOREACH()
ENDFOREACH()
