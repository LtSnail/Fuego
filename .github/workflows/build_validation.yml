name: Build Validation

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      shell: pwsh
      run: |
        pip install pre-commit
        choco install llvm -y

    - name: Run pre-commit
      shell: bash
      run: pre-commit run --color=always --show-diff-on-failure --all-files

    - name: Set reusable strings for Windows
      shell: bash
      run: |
        build_dir="${{ github.workspace }}\\build\\win"
        # Convert backslashes to forward slashes using bash parameter expansion
        build_dir="${build_dir//\\//}"
        echo "build-output-dir=$build_dir" >> $GITHUB_ENV

    - name: Run CMake configuration script for Windows
      shell: pwsh
      run: |
        pwsh ${{ github.workspace }}/Scripts/generate_visual_studio_project.ps1

    - name: Build
      shell: bash
      run: cmake --build ${{ env.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Run clang-tidy
      shell: bash
      run: run-clang-tidy -p ${{ env.build-output-dir }} -quiet -warnings-as-errors=*

    - name: Test
      shell: bash
      working-directory: ${{ env.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
